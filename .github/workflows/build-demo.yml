name: CI/CD

on:
  push:
    branches: ['main']

jobs:
  lint_python:
    name: Je lint le python comme jaja
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      attestations: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - name: Python Linter
      uses: sunnysid3up/python-linter@master
      with:
        source: "docker/app"
        strict: "low"
        mypy-options: "--ignore-missing-imports --show-error-codes"
        #pylint-options: "--rcfile=setup.cfg"
        isort-options: "-w 100"
        
  hadolint:
    name: Hadolint c supair
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      attestations: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - name: Hadolint
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: docker/Dockerfile

  push_to_registries:
    name: Push Docker image to single registry
    runs-on: ubuntu-latest
    needs: 
      - lint_python
      - hadolint
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: harbor.kakor.ovh
          username: ipi
          password: ${{ secrets.password_harbor }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: harbor.kakor.ovh/ipi/groupe-3-bis
          tags: type=sha

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./docker/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test_api:
    name: Test image api
    runs-on: ubuntu-latest
    needs: push_to_registries
    steps:
      - name: Run Docker container
        run: docker run -d -t sha-17bba91 -p 8080:80 --name nginx nginx
      - name: test nginx
        run: sleep 10 && curl http://127.0.0.1:8080

#  test_api:
#    name: Test image api
#    runs-on: ubuntu-latest
#    needs: push_to_registries
#    steps:
#    - name: Check out the repo
#      uses: actions/checkout@v2
#    - name: Run the build process with Docker
#      uses: addnab/docker-run-action@v3
#      with:
#        image: harbor.kakor.ovh/ipi/groupe-3-bis:latest
#        run: |
#          curl --header "Content-Type: application/json" http://localhost:5000/librairie/livres -d '{"titre": "DevSecOps DEAVSETS", "auteur": "Jordan Assouline"}'

